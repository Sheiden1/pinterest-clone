<<<<<<< HEAD
from __future__ import annotations

import json as _json
import typing as t
=======
import json as _json
import typing as _t
>>>>>>> 62bfd5b289aff96e9a36f9e6578d89e41d91673e


class _CompactJSON:
    """Wrapper around json module that strips whitespace."""

    @staticmethod
<<<<<<< HEAD
    def loads(payload: str | bytes) -> t.Any:
        return _json.loads(payload)

    @staticmethod
    def dumps(obj: t.Any, **kwargs: t.Any) -> str:
=======
    def loads(payload: _t.Union[str, bytes]) -> _t.Any:
        return _json.loads(payload)

    @staticmethod
    def dumps(obj: _t.Any, **kwargs: _t.Any) -> str:
>>>>>>> 62bfd5b289aff96e9a36f9e6578d89e41d91673e
        kwargs.setdefault("ensure_ascii", False)
        kwargs.setdefault("separators", (",", ":"))
        return _json.dumps(obj, **kwargs)
